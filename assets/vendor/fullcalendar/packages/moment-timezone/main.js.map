{"version":3,"file":"main.js","sources":["../../../tmp/tsc-output/packages/moment-timezone/src/main.js"],"sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as momentNs from 'moment';\nvar moment = momentNs; // the directly callable function\n// can't simply import 'moment-timezone' because it attempts to load a JSON file,\n// which the end-programmer might not have a loader setup for.\n// the file we are importing is pre-built to have the lib + timezone data.\nimport 'moment-timezone/builds/moment-timezone-with-data';\nimport { NamedTimeZoneImpl, createPlugin } from '@fullcalendar/core';\nvar MomentNamedTimeZone = /** @class */ (function (_super) {\n    tslib_1.__extends(MomentNamedTimeZone, _super);\n    function MomentNamedTimeZone() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MomentNamedTimeZone.prototype.offsetForArray = function (a) {\n        return moment.tz(a, this.timeZoneName).utcOffset();\n    };\n    MomentNamedTimeZone.prototype.timestampToArray = function (ms) {\n        return moment.tz(ms, this.timeZoneName).toArray();\n    };\n    return MomentNamedTimeZone;\n}(NamedTimeZoneImpl));\nexport default createPlugin({\n    namedTimeZonedImpl: MomentNamedTimeZone\n});\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;;AAEA,IAAI,MAAM,GAAG,QAAQ,CAAC;AAMtB,IAAI,mBAAmB,KAAkB,UAAU,MAAM,EAAE;AAC3D,IAAIA,SAAiB,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;AACnD,IAAI,SAAS,mBAAmB,GAAG;AACnC,QAAQ,OAAO,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;AACxE,KAAK;AACL,IAAI,mBAAmB,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE;AAChE,QAAQ,OAAO,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;AAC3D,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,EAAE,EAAE;AACnE,QAAQ,OAAO,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC;AAC1D,KAAK,CAAC;AACN,IAAI,OAAO,mBAAmB,CAAC;AAC/B,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACtB,WAAe,YAAY,CAAC;AAC5B,IAAI,kBAAkB,EAAE,mBAAmB;AAC3C,CAAC,CAAC;;;;"}